version: "3.9"

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${KNEX_USERNAME}
      POSTGRES_PASSWORD: ${KNEX_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${KNEX_DATABASE}
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  # app:
  #   container_name: trello_clone_api_container
  #   build: .
  #   environment:
  #     DATABASE_URL: ${DATABASE_URL}
  #     KNEX_DATABASE: ${KNEX_DATABASE}
  #     KNEX_PASSWORD: ${KNEX_PASSWORD}
  #     KNEX_USERNAME: ${KNEX_USERNAME}
  #     KNEX_HOST: ${KNEX_HOST}
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - postgres
  #   command: node dist/app.js

  # app:
  # container_name: trello_clone_api_container
  # image: klevi730/zindix:2.0.0
  # environment:
  #   DATABASE_URL: ${DATABASE_URL}
  #   KNEX_DATABASE: ${KNEX_DATABASE}
  #   KNEX_PASSWORD: ${KNEX_PASSWORD}
  #   KNEX_USERNAME: ${KNEX_USERNAME}
  #   KNEX_HOST: ${KNEX_HOST}
  # ports:
  #   - "4000:4000"
  # depends_on:
  #   - postgres
  # command: node dist/app.js

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prom/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3030:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  postgres:
  prom_data:
  grafana-storage: {}
